extern void object::nalot()
{
	object  item;
	float dz, dist,moc, celowa=20;
	point start;
	start = position;  
	wys_lot(this,5, 9);
	
	while (true)
	{
		while (radar(AlienAnt, 0, 360, 0, celowa) == null)
		{
			bot(this);
			
			item = radar(AlienAnt);
			lot(this,item,celowa);
			//turn(direction(item.position));
			//move(distance2d(item.position,position)-40);
			//moc=distance2d(item.position,position)/40;
			//motor(moc,moc);
			wait(1);
			
		}
		bot(this);
		motor(0,0);
		item = radar(AlienAnt);
		turn(direction(item.position));
		dz=item.position.z-position.z-2;
		dist=distance2d(item.position,position);
		item = radar(AlienAnt);
		if(aim(atan(dz/dist),direction(item.position))==0)
		{
			fire(1);
		}
		else
		{
			move(-20);
			wys_lot(this,5, 9);
			wait(1);
		}
	}
}
void lot (object bot,object cel,float celowa)
{
	float moc,dir,dist;
	//turn(direction(cel.position));
	
	dir = direction(cel.position);
	if ( dir < 0 )  // on the right ?
	{
		motor(1, 1+dir/90);
	}
	else  // on the left ?
	{
		motor(1-dir/90, 1);
	}
	if ( dir == 0 )  // on the right ?
	{
		moc=(distance2d(cel.position,bot.position)-celowa)/2;
		motor(moc,moc);
		wys_lot(bot,5, 9);
	}
}

void bot(object bot)// uÅ¼ycie funkcji bot(this);
{
	object item;
	if(bot.shieldLevel<0.5)
	{
		item=radar(RepairCenter);
		goto(item.position);
		while ( bot.shieldLevel < 1 )
		{
			wait(1);            // wait until recharged
		}
	}
	if(bot.energyCell.energyLevel < 0.5)
	{
		point  start;          // variable for initial pos.
		object item;           // info. about power station
		      // store initial position
		if(radar(PowerStation)!=null)
		{
			item = radar(PowerStation); // look for station
			goto(item.position);   // go to the power station
			
			while ( bot.energyCell.energyLevel < 1 )
			{
				wait(1);            // wait until recharged
			}
		}
		else
		{
			item = radar(BlueFlag); // look for station
			goto(item.position);
		}
		
		//goto(start);           // go back to initial pos.
		message("Recharge completed");
	}
	if(bot.temperature > 0.6)
	{
		while (topo(bot.position) < 1)
		{
			motor(-1,-1);
			wait(0.5);
		}  
		jet(-0.5);
		while (bot.temperature > 0.1 )
		{
			wait(1);            // wait until recharged
		}
	}
}
void wys_lot(object bot,float min,float max)
{
	if (bot.position.z-topo(bot.position) < min)
	{
		jet(0.5);
	}
	if (bot.position.z-topo(bot.position) > max)
	{
		jet(-0.5);
	}
	wait(1);
	jet(0);
}