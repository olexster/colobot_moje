extern void object::nalot()
{
	object    item;
	float dz, dist,moc;
	point start;
	start = position;  
	jet(1);
	wait(2);
	while (true)
	{
		while (radar(AlienAnt, 0, 360, 0, 40) == null)
		{
			bot(this);
			
			item = radar(AlienAnt);
			lot(this,item);
			//turn(direction(item.position));
			//move(distance2d(item.position,position)-40);
			//moc=distance2d(item.position,position)/40;
			//motor(moc,moc);
			wait(1);
			
		}
		bot(this);
		item = radar(AlienAnt);
		turn(direction(item.position));
		dz=item.position.z-position.z;
		dist=distance2d(item.position,position);
		aim(atan(dz/dist),direction(item.position));
		jet(0);
		fire(1);
	}
}
void lot (object bot,object cel)
{
	float moc;
	//turn(direction(cel.position));
	do
	{
		do
		{
			dir = direction(cel.position);
			if ( dir < 0 )  // on the right ?
			{
				motor(1, 1+dir/90);
			}
			else  // on the left ?
			{
				motor(1-dir/90, 1);
			}
		}
		while(dir!=0);
		moc=distance2d(cel.position,bot.position)/40;
		motor(moc,moc);
		if (bot.position.z-topo(bot.position) < 2)
		{
			jet(1);
		}
		if (bot.position.z-topo(bot.position) > 9)
		{
			if( topo(bot.position) > 0)
			{
				jet(-0.5);
			}
		}
	} 
	while((distance2d(cel.position,bot.position)>40));
}
void bot(object bot)// u≈ºycie funkcji bot(this);
{
	object item;
	if(bot.shieldLevel<0.5)
	{
		item=radar(RepairCenter);
		goto(item.position);
		while ( bot.shieldLevel < 1 )
		{
			wait(1);            // wait until recharged
		}
	}
	if(bot.energyCell.energyLevel < 0.5)
	{
		point  start;          // variable for initial pos.
		object item;           // info. about power station
		
		start = bot.position;      // store initial position
		
		item = radar(PowerStation); // look for station
		goto(item.position);   // go to the power station
		
		while ( bot.energyCell.energyLevel < 1 )
		{
			wait(1);            // wait until recharged
		}
		
		goto(start);           // go back to initial pos.
		message("Recharge completed");
	}
	if(bot.temperature > 0.6)
	{
		while (topo(bot.position) < 1)
		{
			motor(1,1);
			wait(0.5);
		}  
		jet(-0.2);
		while (bot.temperature > 0.1 )
		{
			wait(1);            // wait until recharged
		}
	}
}